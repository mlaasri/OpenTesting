/***********************************************************************
**
** This file is part of OpenTesting, an open-source framework for
** designing standardized tests and informal quizzes.
**
** OpenTesting is free software: you can redistribute it and / or
** modify it under the terms of the GNU General Public License as
** published by the Free Software Foundation, either version 3 of the
** License, or (at your option) any later version.
**
** OpenTesting is distributed in the hope that it will be useful, but
** WITHOUT ANY WARRANTY; without even the implied warranty of
** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
** General Public License for more details.
**
** You should have received a copy of the GNU General Public License
** along with OpenTesting. If not, see <https://www.gnu.org/licenses/>.
**
** Copyright(C) 2023, mlaasri
**
***********************************************************************/

#pragma once

#include <string>
#include <vector>

namespace OT
{
    class String
    {
    public:
        static std::vector<std::string> split(const std::string& string, char delimiter);
        static std::string& replaceAll(std::string& string, const std::string& from, const std::string& to);
        static std::string& removeAll(std::string& string, char character);
        static std::string& trim(std::string& string);
        static std::string& trimLeft(std::string& string);
        static std::string& trimRight(std::string& string);
        static bool startsWith(const std::string& string, const std::string& substring);
        static bool endsWith(const std::string& string, const std::string& substring);
        static bool contains(const std::string& string, const std::string& substring);
        static bool contains(const std::string& string, char character);

    private:
        String();
    };
}